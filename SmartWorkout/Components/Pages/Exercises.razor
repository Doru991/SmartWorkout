@page "/exercises"
@using DBAccess
@using DBAccess.Repository
@inject IGenericRepository<Exercise> Repo;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Exercises</PageTitle>
<a href="/addexercise">New Exercise...</a><br />
Exercise types:

@if (exercises == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Options</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var exercise in exercises)
            {
                <tr>
                    <td><button @onclick="(() => DeleteExercise(exercise))">Delete</button><button @onclick="(() => ModifyExercise(exercise))">Edit</button></td>
                    <td>@exercise.Name</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private Exercise[]? exercises = null;
    protected override async Task OnInitializedAsync()
    {
        exercises = await Repo.GetItemsAsync();
    }
    void DeleteExercise(Exercise exercise)
    {
        Repo.DeleteItem(exercise.Id);
        Repo.Save();
        exercises = Repo.GetItems();
    }
    void ModifyExercise(Exercise exercise)
    {
        NavigationManager.NavigateTo("modifyexer/" + exercise.Id);
    }
}